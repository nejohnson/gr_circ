## DIODES ################################################

# ========================================================
# Interface
# ========================================================

# $1 = name, D1
# $2 = value, 1N4148
# $3 = orientation, [lrud]

define diode {
  if ("$3" == "r" || "$3" == "l") then {
    diodeH($1,$2,$3,$4)
  } else {
    diodeV($1,$2,$3,$4)
  }
}

define zenerdiode {
  diode($1,$2,$3,z)
}

define schottkydiode {
  diode($1,$2,$3,s)
}

# ========================================================
# Horizontal diodes
# ========================================================

define diodeH {
  if ("$3" == "r") then {
    diodeR($1,$2,$3,$4)
  } else {
    diodeL($1,$2,$3,$4)
  }
}

# Horizontal rightwards ----------------------------------

define diodeR {
  linethick = 1
  {
  right
$1: [
    # Symbol
    { A: box invis wid 0 ht 0 }
    arrow 0.27 width 0.15 height 0.15
    { left; BODY: box wid 0.15 ht 0.3 invis }
    { move up 0.075; BAR: line down 0.15 }
    line 0.13
    { C: box invis wid 0 ht 0 }
    
    # Decorations
    {
      if("$4"=="z") then {
        line left 0.03 from BAR.s
      }  
      if("$4"=="s") then {
        line right 0.03 from BAR.e
        line down 0.03
        line left 0.03 from BAR.s
        line up 0.03
      }
    }
    
    # Labels
    {
      if ("$2" != "") then {
        "$1" "$2" "" at BODY.n
      } else {
        "$1" at BODY.n
      }
    }
    ]
  }
  move to $1.C
}

# Horizontal leftwards -----------------------------------

define diodeL {
  linethick = 1
  {
  left
$1: [
    # Symbol
    { A: box invis wid 0 ht 0 }
    arrow 0.27 width 0.15 height 0.15
    { right; BODY: box wid 0.15 ht 0.3 invis }
    { move up 0.075; BAR: line down 0.15 }
    line 0.13
    { C: box invis wid 0 ht 0 }
    
    # Decorations
    {
      if("$4"=="z") then {
        line right 0.03 from BAR.e
      }  
      if("$4"=="s") then {
        line right 0.03 from BAR.e
        line down 0.03
        line left 0.03 from BAR.s
        line up 0.03
      }
    }

    # Labels
    {
      if ("$2" != "") then {
        "$1" "$2" "" at BODY.n
      } else {
        "$1" at BODY.n
      }
     }
    ]
  }
  move to $1.C
}

# ========================================================
# Vertical diodes
# ========================================================

define diodeV {
  if ("$3" == "d") then {
    diodeD($1,$2,$3,$4)
  } else {
    diodeU($1,$2,$3,$4)
  }
}

# Vertical downwards -------------------------------------

define diodeD {
  linethick = 1
  {
  down
$1: [
    # Symbol
    { A: box invis wid 0 ht 0 }
    arrow 0.27 width 0.15 height 0.15
    { up; BODY: box wid 0.15 ht 0.15 invis }
    { move left 0.075; BAR: line right 0.15 }
    line 0.13
    { C: box invis wid 0 ht 0 }
    
    # Decorations
    {
      if("$4"=="z") then {
        line up 0.03 from BAR.w
      }
      if("$4"=="s") then {
        line down 0.03 from BAR.e
        line left 0.03
        line up 0.03 from BAR.s
        line right 0.03
      }
    }

    # Labels
    { if ("$2" != "") then {
        " $1" at BODY.e + (0,0.08) ljust
        " $2" at BODY.e + (0,-0.08) ljust
      } else {
        " $1" at BODY.e ljust
      }
    }
    ]
  }
  move to $1.C
}

# Vertical upwards ---------------------------------------

define diodeU {
  linethick = 1
  {
  up
$1: [
    # Symbol
    { A: box invis wid 0 ht 0 }
    arrow 0.27 width 0.15 height 0.15
    { down; BODY: box wid 0.15 ht 0.15 invis }
    { move left 0.075; BAR: line right 0.15 }
    line 0.13
    { C: box invis wid 0 ht 0 }
    
    # Decorations
    {
      if("$4"=="z") then {
        line down 0.03 from BAR.e
      }  
      if("$4"=="s") then {
        line down 0.03 from BAR.e
        line left 0.03
        line up 0.03 from BAR.s
        line right 0.03
      }
    }
  
    # Labels
    { if ("$2" != "") then {
        " $1" at BODY.e + (0,0.08) ljust
        " $2" at BODY.e + (0,-0.08) ljust
      } else {
        " $1" at BODY.e ljust
      }
    }
    ]
  }
  move to $1.C
}

##########################################################

